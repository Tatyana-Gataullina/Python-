1.На вход программе подается строка текста на английском языке, в которой нужно зашифровать все слова. Каждое слово строки следует зашифровать с помощью шифра Цезаря 
(циклического сдвига на длину этого слова). Строчные буквы при этом остаются строчными, а прописные – прописными.

import re
eng_lower_alphabet = 'abcdefghijklmnopqrstuvwxyz'
eng_upper_alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'

f = input()    #вводимая строка для дальнейшего шифрования
txt = [len(i) for i in re.findall(r'\b\w+\b',f)]    #создание списка с элементами, характеризующими длину каждого слова в строке без учета иных символов (кавычки и т.д.)

m=f.split(' ')   #преобразование строки в список
lis=[]

for j in range(len(m)):
    if j>0:
        lis.append(' ') #добавление пробела между элементами списка 
    for x in range(len(m[j])):  #прохождение списка посимвольно
        if (m[j][x]).isalpha():  
            if m[j][x] == m[j][x].upper():
                for y in range(len(eng_upper_alphabet)):
                    if (m[j][x])== eng_upper_alphabet[y]:
                        lis.append(eng_upper_alphabet[(y + txt[j])%26])
            if m[j][x]== m[j][x].lower():
                for y in range(len(eng_lower_alphabet)):
                    if (m[j][x])== eng_lower_alphabet[y]:
                        lis.append(eng_lower_alphabet[(y + txt[j])%26])
        else:
            lis.append(m[j][x])  #если символ - не буква, просто присоединяем к списку без сдвига 

print(*lis,'\n',sep='')


2. Напишите функцию is_one_away(word1, word2), которая принимает в качестве аргументов два слова word1 и word2 и возвращает значение True,если слова имеют одинаковую длину 
и отличаются ровно в 1 символе и False в противном случае.

# объявление функции
def is_one_away(word1, word2):
    count=0
    if len(word1)==len(word2):
        sovp=1
    for i,j in zip(word1,word2):
        if i==j:
            count+=1
    if count==len(word1)-1 and sovp==1:
        return True
    else:
        return False
    pass

# считываем данные
txt1 = input()
txt2 = input()
# вызываем функцию
print(is_one_away(txt1, txt2))


3.Напишите функцию is_palindrome(text), которая принимает в качества аргумента строку text и возвращает значение True если указанный текст является палиндромом и False в 
противном случае. 
Примечание 1. Палиндром – это строка, которая читается одинаково в обоих направлениях
Примечание 2. При проверке считайте большие и маленькие буквы одинаковыми, а также игнорируйте пробелы, а также символы , . ! ? -.

# объявление функции
def is_palindrome(text):
    lis=[]
    for i in txt.lower():
        if i.isalpha():
            lis.append(i)
    m=''.join(lis)
    if m[::]==m[::-1]:
        return True
    else:
        return False
    pass
# считываем данные
txt = input()
# вызываем функцию
print(is_palindrome(txt))


4.Напишите функцию, is_pangram(text) которая принимает в качестве аргумента строку текста на английском языке и возвращает значение True если текст является панграммой и False в противном случае.
Панграмма – это фраза, содержащая в себе все буквы алфавита. Обычно панграммы используют для презентации шрифтов, чтобы можно было в одной фразе рассмотреть все глифы.
# объявление функции
def is_pangram(text):
    count=0
    m=text.lower()           #приводим вводимый текст к строчным буквам чтобы унифицировать сравнение по символам
    r = "".join(set(text))   #set используется чтобы удалить повторяющиеся символы в тексте
    lis=[]
    for i in r:
        if i.isalpha():
            lis.append(i)
    for i in lis:
        if i in 'abcdefghijklmnopqrstuvwxyz':
            count+=1
    if count==26:           #в английском алфавите 26 букв 
        return True
    else:
        return False
    pass

# считываем данные
text = input()
# вызываем функцию
print(is_pangram(text))

